import numpy as np
from scipy.spatial.distance import euclidean

class Recommendation :

    def __init__(self, song_df) :
        self.song_df = song_df
        self.song_values = song_df.iloc[:, 1:]
        self.song_values = np.asarray(self.song_values).astype(float).reshape(-1, 2)

    def emotion_to_songs(self, emotion) :
        '''
        Args:
            emotion (np.ndarray): the vector (shape (1,2)) represent the pair of valence \
                and arousal values retrieved from the user(s)'s facial
                expression (generated by the model)
        Return:
            (np.ndarray): an array containing the ids of the five best-matched songs
        '''
        distance = []
        for song in self.song_values:
            distance.append(euclidean(emotion, song))
        
        distance = np.asarray(distance) 
        top_5_ids = self.__get_top_5(distance)
        return top_5_ids
        
    def __get_top_5(self, distance) :
        '''
        Return:
            (np.ndarray): an array containing the ids of the five best matched songs
        '''
        song_idx = distance.argsort()[:5]
        return np.asarray(self.song_df.iloc[song_idx, 0])


    